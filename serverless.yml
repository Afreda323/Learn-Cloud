service: notes-app-api

plugins:
  - serverless-webpack
  - serverless-offline
 
custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-notes
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}
 
resources:
  # DynamoDB
  - ${file(resources/dynamo.yaml)}
  # S3
  - ${file(resources/s3.yaml)}
  # Cognito
  - ${file(resources/user-pool.yaml)}
  - ${file(resources/id-pool.yaml)}

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-2
  environment:
    tableName: ${self:custom.tableName}
    stripeSecretKey: ${env:stripeSecretKey, self:custom.environment.stripeSecretKey}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ NotesTable, Arn ]

functions:
  create:
    handler: functions/create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: functions/get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: functions/list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: functions/update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: functions/delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  billing:
    handler: functions/billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizor: aws_iam
